import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as e,o as a}from"./app-BDQL9qnX.js";const t={};function l(p,i){return a(),n("div",null,i[0]||(i[0]=[e(`<h3 id="description" tabindex="-1"><a class="header-anchor" href="#description"><span>Description</span></a></h3><blockquote><p>In software engineering, dependency injection is a software design pattern that implements inversion of control for software libraries. Caller delegates to an external framework the control flow of discovering and importing a service or software module specified or &quot;injected&quot; by the caller.</p></blockquote><ul><li>Là 1 design pattern.</li><li>Class phụ thuộc vào class khác. Thay vì khởi tạo class trong class ban đầu ta inject intance vào consructor hay setter method.</li><li>Hiện thực cho IoC</li></ul><p><em>DI is about wiring, IoC is about direction, and DIP is about shape.</em></p><p>DI là 1 thực hiện cụ thể, IoC là hướng đi và DIP định hình.</p><h3 id="cac-loai-dependency-injection" tabindex="-1"><a class="header-anchor" href="#cac-loai-dependency-injection"><span>Các loại dependency injection:</span></a></h3><ol><li>Constructor injection</li><li>Setter injection</li><li>Interface injection</li></ol><h3 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h3><p>Class FooController có dùng instance của FooRepositoryInterface.</p><p>FooRepositoryInterface được DI thông qua constructor của FooController .</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-php"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> FooController</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    protected</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> FooRepositoryInterface</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $fooRepository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> __construct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">FooRepositoryInterface</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $fooRepository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        $this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">fooRepository</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $fooRepository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> indexAction</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        $bar</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> $this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">fooRepository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getBar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;bar-method:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> .</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $bar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Tương tự cho FooServiceInterface được DI thông qua constructor của FooRepository.</p><p>Để sử dụng FooController.</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-php"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$fooController</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> FooController</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> FooRepository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> FooService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Issue:</p><ul><li>Class có nhiều dependency và các dependency này là có nhiều dependency khác.</li><li>Đoạn code trên đang DI 1 interface chứ không phải 1 class.</li></ul><p>-&gt; Sử dụng DI Container.</p><ul><li><p>Nơi quản lí các dependency,</p></li><li><p>Tự động resolve và inject các dependency. Chỉ cần type-hinting vào contructor hoặc method DI sẽ tự động resolve cho bạn.</p><p>Tương tự như ServiceContainer của Laravel.</p></li></ul><hr><p>Github: <a href="https://github.com/ninhnguyen22/nin" title="https://github.com/ninhnguyen22/nin" target="_blank" rel="noopener noreferrer">https://github.com/ninhnguyen22/nin</a></p>`,20)]))}const h=s(t,[["render",l]]),c=JSON.parse('{"path":"/blogs/OOP/dependency-injection_224.html","title":"Dependency Injection","lang":"en-US","frontmatter":{"title":"Dependency Injection","date":"2025-08-08T00:00:00.000Z","tags":["OOP","DI"],"categories":["OOP"],"author":"Admin","location":"VN","description":"Dependency Injection (DI)","image":null,"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Dependency Injection\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-08-08T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Admin\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/blogs/OOP/dependency-injection_224.html"}],["meta",{"property":"og:site_name","content":"Nin Blog"}],["meta",{"property":"og:title","content":"Dependency Injection"}],["meta",{"property":"og:description","content":"Dependency Injection (DI)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Admin"}],["meta",{"property":"article:tag","content":"DI"}],["meta",{"property":"article:tag","content":"OOP"}],["meta",{"property":"article:published_time","content":"2025-08-08T00:00:00.000Z"}]]},"git":{},"readingTime":{"minutes":1,"words":301},"filePathRelative":"blogs/OOP/dependency-injection_224.md","excerpt":"<h3>Description</h3>\\n<blockquote>\\n<p>In software engineering, dependency injection is a software design pattern that implements inversion of control for software libraries. Caller delegates to an external framework the control flow of discovering and importing a service or software module specified or \\"injected\\" by the caller.</p>\\n</blockquote>"}');export{h as comp,c as data};
